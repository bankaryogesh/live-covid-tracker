{"version":3,"sources":["components/covid.js","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","data","setData","getCovidData","a","fetch","res","json","actualData","console","log","statewise","useEffect","className","class","recovered","active","confirmed","deaths","migratedother","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAsGeA,EAlGD,WAEZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,+EAECC,MAAM,0CAFP,cAEXC,EAFW,gBAGQA,EAAIC,OAHZ,OAGXC,EAHW,OAIjBC,QAAQC,IAAIF,EAAWG,UAAU,IACjCT,EAAQM,EAAWG,UAAU,IALZ,kDAQjBF,QAAQC,IAAR,MARiB,0DAAH,qDAgBlB,OAJAE,qBAAU,WACRT,MACC,IAGD,mCAEE,oCACE,qBAAKU,UAAU,cAAf,SACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,WAAf,SACE,6DAKN,qBAAKC,MAAM,YAAX,SACE,sBAAKA,MAAM,MAAX,UACE,qBAAKD,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,+CACA,6BAAKZ,EAAKc,YACV,8CACA,6BAAKd,EAAKe,SACV,kDACA,6BAAKf,EAAKgB,YACV,+CACA,6BAAKhB,EAAKiB,cAKd,qBAAKJ,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SACE,sBAAKA,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,sBAAKD,UAAU,YAAf,UACE,6BAAKZ,EAAKkB,gBACV,2DAGJ,qBAAKL,MAAM,WAAX,SACE,sBAAKD,UAAU,YAAf,UACE,6BAAKZ,EAAKc,YACV,4DAGJ,qBAAKD,MAAM,WAAX,SACE,sBAAKD,UAAU,YAAf,UACE,6BAAKZ,EAAKgB,YACV,sDAIJ,qBAAKH,MAAM,WAAX,SACE,sBAAKD,UAAU,YAAf,UACE,6BAAKZ,EAAKiB,SACV,0DAGJ,qBAAKJ,MAAM,WAAX,SACE,sBAAKD,UAAU,YAAf,UACE,6BAAKZ,EAAKe,SACV,yDAGJ,qBAAKF,MAAM,WAAX,SACE,sBAAKD,UAAU,YAAf,UACE,6BAAKZ,EAAKmB,kBACV,oEC9EPC,G,MALJ,WACP,OACE,cAAC,EAAD,MCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e84c765.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './covid.css';\r\n\r\n\r\nconst Covid = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const getCovidData = async () => {\r\n    try {\r\n      const res = await fetch('https://api.covid19india.org/data.json');\r\n      const actualData = await res.json();\r\n      console.log(actualData.statewise[0]);\r\n      setData(actualData.statewise[0]);\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    getCovidData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n\r\n      <section >\r\n        <div className=\"about_intro\">\r\n          <div className=\"about_us\">\r\n            <div className=\"header_t\">\r\n              <h2>Live Covid-19 Tracker</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div className='col-md-4'>\r\n              <div className=\"box-wrap1\">\r\n                <h5>COUNTRY INDIA</h5>\r\n                <h3>{data.recovered}</h3>\r\n                <h6>TOTAL ACTIVE</h6>\r\n                <h3>{data.active}</h3>\r\n                <h6> TOTAL CONFIRMED</h6>\r\n                <h3>{data.confirmed}</h3>\r\n                <h6> TOTAL DEATHS</h6>\r\n                <h3>{data.deaths}</h3>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-8\">\r\n              <div class=\"container\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div className=\"box-wrap2\">\r\n                      <h2>{data.migratedother}</h2>\r\n                      <h5>TOTAL MIGRATED OTHER</h5>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div className=\"box-wrap3\">\r\n                      <h3>{data.recovered}</h3>\r\n                      <h5>TOTAL RECOVERED CASES</h5>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div className=\"box-wrap4\">\r\n                      <h3>{data.confirmed}</h3>\r\n                      <h5>TOTAL CONFIRMED</h5>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div className=\"box-wrap5\">\r\n                      <h3>{data.deaths}</h3>\r\n                      <h5>TOTAL NO. OF DEATHS</h5>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div className=\"box-wrap6\">\r\n                      <h3>{data.active}</h3>\r\n                      <h5>TOTAL ACTIVE CASES</h5>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div className=\"box-wrap7\">\r\n                      <h4>{data.lastupdatedtime}</h4>\r\n                      <h5>LAST UPDATE</h5>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport default Covid","import React from 'react'\nimport Covid from \"./components/covid\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nconst App =() => {\n    return (\n      <Covid/>\n    )\n}\nexport default App ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}